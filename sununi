<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>The Green Shift Journey</title>
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #f6f9f6;
      color: #2e4d36;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    header {
      background-color: #a7d7a9;
      color: #fff;
      text-align: center;
      width: 100%;
      padding: 20px 0;
      font-size: 1.5em;
      font-weight: 600;
    }
    .container {
      max-width: 420px;
      width: 100%;
      margin: 20px;
      background: white;
      border-radius: 16px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      padding: 20px;
    }
    .progress {
      width: 100%;
      background: #dcefdc;
      border-radius: 12px;
      height: 18px;
      margin: 10px 0 20px 0;
      overflow: hidden;
    }
    .progress-bar {
      height: 100%;
      background-color: #60b66e;
      width: 0%;
      transition: width 0.3s;
    }
    .booth {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: #f1f8f2;
      border-radius: 12px;
      padding: 12px 16px;
      margin-bottom: 10px;
    }
    .booth h4 { margin: 0; font-weight: 500; }
    .stamp {
      width: 28px;
      height: 28px;
      border-radius: 50%;
      background: #ccc;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 16px;
      color: white;
    }
    .stamped { background: #60b66e !important; }
    #loginDiv { text-align: center; margin-top: 50px; }
    button {
      padding: 8px 14px;
      border-radius: 8px;
      border: none;
      background-color: #60b66e;
      color: white;
      cursor: pointer;
      margin: 6px;
    }
    button:hover { background-color: #4a9858; }

    /* Floating alert box */
    #toast {
      visibility: hidden;
      min-width: 240px;
      background-color: #60b66e;
      color: white;
      text-align: center;
      border-radius: 12px;
      padding: 12px;
      position: fixed;
      z-index: 1;
      left: 50%;
      bottom: 30px;
      transform: translateX(-50%);
      transition: visibility 0s, opacity 0.5s ease;
      opacity: 0;
    }
    #toast.show {
      visibility: visible;
      opacity: 1;
    }
  </style>
</head>
<body>
  <header>The Green Shift Journey</header>

  <!-- Login Section -->
  <div id="loginDiv">
    <h3>Sign in to start your journey 🌿</h3>
    <button id="googleLogin">Sign in with Google</button>
  </div>

  <!-- Main App -->
  <div class="container" id="mainApp" style="display:none;">
    <h3>My Journey</h3>
    <div id="progressText"></div>
    <div class="progress"><div class="progress-bar" id="progressBar"></div></div>
    <div id="boothList"></div>
    <button id="logoutBtn" style="margin-top:10px;">Logout</button>
  </div>

  <!-- Toast -->
  <div id="toast"></div>

  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-app.js";
    import {
      getAuth,
      GoogleAuthProvider,
      signInWithPopup,
      signOut,
      onAuthStateChanged
    } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-auth.js";
    import {
      getFirestore,
      doc,
      getDoc,
      setDoc
    } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-firestore.js";

    // Firebase config
    const firebaseConfig = {
      apiKey: "AIzaSyBePKNaXo7cr_oAteQydv1D0IV_68fpglo",
      authDomain: "sustainable12.firebaseapp.com",
      databaseURL: "https://sustainable12-default-rtdb.asia-southeast1.firebasedatabase.app",
      projectId: "sustainable12",
      storageBucket: "sustainable12.appspot.com",
      messagingSenderId: "905147566179",
      appId: "1:905147566179:web:52e20f5afccd05166a1056",
      measurementId: "G-HVNWTXWPH4"
    };

    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);
    const db = getFirestore(app);

    const booths = [
      "Booth 1 – Waste Sorting Challenge",
      "Booth 2 – Sugar Shock Guess",
      "Booth 3 – Eco Trivia Wheel",
      "Booth 4 – (TBD)",
      "Booth 5 – Create Your Mona Lisa",
      "Booth 6 – Giant Monopoly",
      "Booth 7 – Sponsor Booth A",
      "Booth 8 – Sponsor Booth B",
      "Booth 9 – Sponsor Booth C"
    ];

    const loginDiv = document.getElementById("loginDiv");
    const mainApp = document.getElementById("mainApp");
    const boothList = document.getElementById("boothList");
    const progressBar = document.getElementById("progressBar");
    const progressText = document.getElementById("progressText");
    const toast = document.getElementById("toast");

    let currentUser = null;
    let userData = { stamps: [] };

    function showToast(msg) {
      toast.textContent = msg;
      toast.className = "show";
      setTimeout(() => { toast.className = toast.className.replace("show", ""); }, 2500);
    }

    async function renderBooths() {
      boothList.innerHTML = "";
      let stampedCount = userData.stamps.length;
      booths.forEach((b, i) => {
        const stamped = userData.stamps.includes(i);
        boothList.innerHTML += `
          <div class="booth">
            <h4>${b}</h4>
            <div class="stamp ${stamped ? 'stamped' : ''}" data-id="${i}">${stamped ? '✓' : ''}</div>
          </div>`;
      });
      document.querySelectorAll(".stamp").forEach(el => {
        el.addEventListener("click", async () => {
          const id = parseInt(el.dataset.id);
          if (!userData.stamps.includes(id)) {
            userData.stamps.push(id);
            await setDoc(doc(db, "users", currentUser.uid), userData, { merge: true });
            renderBooths();
            showToast(`✅ New stamp collected! (${userData.stamps.length}/${booths.length})`);
            if ([4,7,9].includes(userData.stamps.length))
              showToast("🎉 You unlocked a prize!");
          }
        });
      });
      let progress = Math.round((stampedCount / booths.length) * 100);
      progressBar.style.width = progress + "%";
      progressText.innerText = `You have collected ${stampedCount} of ${booths.length} stamps`;
    }

    document.getElementById("googleLogin").addEventListener("click", async () => {
      const provider = new GoogleAuthProvider();
      try {
        await signInWithPopup(auth, provider);
      } catch (error) {
        console.error(error);
        showToast("⚠️ Login failed. Check Firebase domain settings.");
      }
    });

    document.getElementById("logoutBtn").addEventListener("click", () => signOut(auth));

    onAuthStateChanged(auth, async (user) => {
      if (user) {
        currentUser = user;
        const ref = doc(db, "users", user.uid);
        const snap = await getDoc(ref);
        userData = snap.exists() ? snap.data() : { stamps: [] };
        loginDiv.style.display = "none";
        mainApp.style.display = "block";
        renderBooths();
        showToast(`Welcome, ${user.displayName || "Explorer"} 🌱`);
      } else {
        loginDiv.style.display = "block";
        mainApp.style.display = "none";
      }
    });
  </script>
</body>
</html>
